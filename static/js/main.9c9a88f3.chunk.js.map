{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["welcome","className","style","color","src","alt","App","hoverClasses","classNameOfTargetElement","classNameOfStyle","cursorChildren","href","target","marginTop","fontSize","display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAGMA,EACJ,qBAAIC,UAAU,KAAd,+MAIE,sBAAMC,MAAO,CAAEC,MAAO,OAAtB,yCACA,qBACEF,UAAU,aACVG,IAAI,qGACJC,IAAI,kBAKK,SAASC,IACtB,OACE,cAAC,IAAD,CACEC,aAAc,CACZ,CAAEC,yBAA0B,OAAQC,iBAAkB,cACtD,CAAED,yBAA0B,OAAQC,iBAAkB,SACtD,CAAED,yBAA0B,QAASC,iBAAkB,eACvD,CACED,yBAA0B,SAC1BC,iBAAkB,mBAEpB,CACED,yBAA0B,WAC1BC,iBAAkB,iBAClBC,eAAgBV,IAZtB,SAeE,sBAAKC,UAAU,UAAf,UACE,6BACE,mBACEA,UAAU,OACVU,KAAK,+CACLC,OAAO,SAHT,6BAOF,6DAC+B,IAC7B,mBAAGX,UAAU,QAAQW,OAAO,SAASD,KAAK,uBAA1C,mBAEK,IAJP,gBAKgB,IACd,oBACEV,UAAU,OACVW,OAAO,SACPD,KAAK,0CAHP,UAIG,IAJH,mBAQF,yFAvBF,UAwBU,IACR,oBAAGA,KAAK,6BAA6BC,OAAO,SAASX,UAAU,SAA/D,UACG,IADH,4BAIA,mBACEU,KAAK,kDACLT,MAAO,CAAEW,UAAW,MAAOC,SAAU,OAAQC,QAAS,SAFxD,SAGE,sBAAMd,UAAU,WAAhB,4BClEV,IAYee,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9c9a88f3.chunk.js","sourcesContent":["import \"./App.css\";\r\nimport Cursor from \"react-special-cursor\";\r\n\r\nconst welcome = (\r\n  <h3 className=\"h3\">\r\n    Welcome to Demo of React-special-cursor from version 1.1.0 u will have the\r\n    ability to show texts, elements ... on hover inside the cursor-dot by only\r\n    adding a cursorChildren to hoverClass object\r\n    <span style={{ color: \"red\" }}> Click to see documentation</span>\r\n    <img\r\n      className=\"react-icon\"\r\n      src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1200px-React-icon.svg.png\"\r\n      alt=\"react img \"\r\n    />\r\n  </h3>\r\n);\r\n\r\nexport default function App() {\r\n  return (\r\n    <Cursor\r\n      hoverClasses={[\r\n        { classNameOfTargetElement: \"head\", classNameOfStyle: \"head-hover\" },\r\n        { classNameOfTargetElement: \"link\", classNameOfStyle: \"hover\" },\r\n        { classNameOfTargetElement: \"react\", classNameOfStyle: \"react-hover\" },\r\n        {\r\n          classNameOfTargetElement: \"author\",\r\n          classNameOfStyle: \"author-on-hover\",\r\n        },\r\n        {\r\n          classNameOfTargetElement: \"children\",\r\n          classNameOfStyle: \"children-hover\",\r\n          cursorChildren: welcome,\r\n        },\r\n      ]}>\r\n      <div className=\"wrapper\">\r\n        <h1>\r\n          <a\r\n            className=\"head\"\r\n            href=\"https://github.com/amirho1/react-cursors.git\"\r\n            target=\"_blank\">\r\n            React-cursors\r\n          </a>\r\n        </h1>\r\n        <p>\r\n          A custom animated cursor for{\" \"}\r\n          <a className=\"react\" target=\"_blank\" href=\"https://reactjs.org/\">\r\n            React\r\n          </a>{\" \"}\r\n          also supports{\" \"}\r\n          <a\r\n            className=\"link\"\r\n            target=\"_blank\"\r\n            href=\"https://www.typescriptlang.org/download\">\r\n            {\" \"}\r\n            Typescript\r\n          </a>\r\n        </p>\r\n        <p>You can hover over the links and click to see animations</p>\r\n        Author:{\" \"}\r\n        <a href=\"https://github.com/amirho1\" target=\"_blank\" className=\"author\">\r\n          {\" \"}\r\n          AmirHossein Salighedar\r\n        </a>\r\n        <a\r\n          href=\"https://github.com/amirho1/react-special-cursor\"\r\n          style={{ marginTop: \"3em\", fontSize: \"2rem\", display: \"block\" }}>\r\n          <span className=\"children\">HoverMe</span>\r\n        </a>\r\n      </div>\r\n    </Cursor>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}